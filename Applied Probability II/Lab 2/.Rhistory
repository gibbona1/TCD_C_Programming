#Q1
x<-rnorm(50,0,1)
x.var<-var(x)
CIfunc <- function(x, alpha, x.var)
{
# find the number of elements in x
n <- length(x)
# calculate the mean of x
x.mean <- mean(x)
# appropriate z-value
z <- qnorm(1-alpha/2)
Low <- x.mean - z*sqrt(x.var/n) # lower bound
High <- x.mean + z*sqrt(x.var/n) # upper bound
# return confidence interval as a vector
return(c(Low, High))
}
CIfunc(x, 0.1, x.var)
CIfunc(x, 0.05, x.var)
CIfunc(x, 0.01, x.var)
# the higher the level of confidence, the wider the confidence interval
#Q2
m <- 100000
n <- 15
Samples <- function(m,n)
{
matrix( rnorm( m*n ), nrow=m, ncol=n, byrow=TRUE )
}
Samp <- Samples(m,n)
Samp
Percent <- function( X ) {
CIs <- matrix( nrow=nrow(X), ncol=2 )
for( k in 1:nrow(X) ) CIs[k, ] <- CIfunc( X[k,], 0.05 , 1)
z <- ( CIs[,1] < 0 ) * ( CIs[ , 2 ] > 0)
sum(z)/nrow(X)
}
Percent(Samp)
#Q3
RowVar <- function(x, ...) {
rowSums((x - rowMeans(x, ...))^2, ...)/(dim(x)[2] - 1)
}
row.mean <- rowMeans(Samp)
row.var<-RowVar(Samp)
SampCI<-CIfunc(row.mean, 0.05, row.var)
Percent(SampCI)
